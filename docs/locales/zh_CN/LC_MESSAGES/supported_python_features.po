# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Jukka Lehtosalo
# This file is distributed under the same license as the Mypy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mypy "
"0.940+dev.ff5f71d674aece3095b7a623cc910e48c5a01c1e.dirty\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-04 14:39+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/supported_python_features.rst:2
msgid "Supported Python features"
msgstr ""

#: ../../source/supported_python_features.rst:4
msgid "A list of unsupported Python features is maintained in the mypy wiki:"
msgstr ""

#: ../../source/supported_python_features.rst:6
msgid ""
"`Unsupported Python features <https://github.com/python/mypy/wiki"
"/Unsupported-Python-Features>`_"
msgstr ""

#: ../../source/supported_python_features.rst:9
msgid "Runtime definition of methods and functions"
msgstr ""

#: ../../source/supported_python_features.rst:11
msgid ""
"By default, mypy will complain if you add a function to a class or module"
" outside its definition -- but only if this is visible to the type "
"checker. This only affects static checking, as mypy performs no "
"additional type checking at runtime. You can easily work around this. For"
" example, you can use dynamically typed code or values with ``Any`` "
"types, or you can use :py:func:`setattr` or other introspection features."
" However, you need to be careful if you decide to do this. If used "
"indiscriminately, you may have difficulty using static typing "
"effectively, since the type checker cannot see functions defined at "
"runtime."
msgstr ""

